// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package finf.ucf.cu.domain;

/**
 * 
 */
public abstract class NotAvalability
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 1873995502069162526L;

    private java.util.Date date;

    /**
     * 
     */
    public java.util.Date getDate()
    {
        return this.date;
    }

    public void setDate(java.util.Date date)
    {
        this.date = date;
    }

    private finf.ucf.cu.domain.cTime not_time;

    /**
     * 
     */
    public finf.ucf.cu.domain.cTime getNot_time()
    {
        return this.not_time;
    }

    public void setNot_time(finf.ucf.cu.domain.cTime not_time)
    {
        this.not_time = not_time;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private finf.ucf.cu.domain.Teacher teacherId;

    /**
     * 
     */
    public finf.ucf.cu.domain.Teacher getTeacherId()
    {
        return this.teacherId;
    }

    public void setTeacherId(finf.ucf.cu.domain.Teacher teacherId)
    {
        this.teacherId = teacherId;
    }

    private finf.ucf.cu.domain.Group groupId;

    /**
     * 
     */
    public finf.ucf.cu.domain.Group getGroupId()
    {
        return this.groupId;
    }

    public void setGroupId(finf.ucf.cu.domain.Group groupId)
    {
        this.groupId = groupId;
    }

    private finf.ucf.cu.domain.Subject subjectId;

    /**
     * 
     */
    public finf.ucf.cu.domain.Subject getSubjectId()
    {
        return this.subjectId;
    }

    public void setSubjectId(finf.ucf.cu.domain.Subject subjectId)
    {
        this.subjectId = subjectId;
    }

    /**
     * Returns <code>true</code> if the argument is an NotAvalability instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof NotAvalability))
        {
            return false;
        }
        final NotAvalability that = (NotAvalability)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link finf.ucf.cu.domain.NotAvalability}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link finf.ucf.cu.domain.NotAvalability}.
         */
        public static finf.ucf.cu.domain.NotAvalability newInstance()
        {
            return new finf.ucf.cu.domain.NotAvalabilityImpl();
        }


        /**
         * Constructs a new instance of {@link finf.ucf.cu.domain.NotAvalability}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static finf.ucf.cu.domain.NotAvalability newInstance(java.util.Date date, finf.ucf.cu.domain.cTime not_time, finf.ucf.cu.domain.Teacher teacherId, finf.ucf.cu.domain.Group groupId, finf.ucf.cu.domain.Subject subjectId)
        {
            final finf.ucf.cu.domain.NotAvalability entity = new finf.ucf.cu.domain.NotAvalabilityImpl();
            entity.setDate(date);
            entity.setNot_time(not_time);
            entity.setTeacherId(teacherId);
            entity.setGroupId(groupId);
            entity.setSubjectId(subjectId);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}