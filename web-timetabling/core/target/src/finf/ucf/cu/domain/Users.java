// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package finf.ucf.cu.domain;

/**
 * 
 */
public abstract class Users
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -6439224899216868124L;

    private java.lang.String username;

    /**
     * 
     */
    public java.lang.String getUsername()
    {
        return this.username;
    }

    public void setUsername(java.lang.String username)
    {
        this.username = username;
    }

    private java.lang.String password;

    /**
     * 
     */
    public java.lang.String getPassword()
    {
        return this.password;
    }

    public void setPassword(java.lang.String password)
    {
        this.password = password;
    }

    private java.lang.String firstName;

    /**
     * 
     */
    public java.lang.String getFirstName()
    {
        return this.firstName;
    }

    public void setFirstName(java.lang.String firstName)
    {
        this.firstName = firstName;
    }

    private java.lang.String lastName;

    /**
     * 
     */
    public java.lang.String getLastName()
    {
        return this.lastName;
    }

    public void setLastName(java.lang.String lastName)
    {
        this.lastName = lastName;
    }

    private java.lang.String email;

    /**
     * 
     */
    public java.lang.String getEmail()
    {
        return this.email;
    }

    public void setEmail(java.lang.String email)
    {
        this.email = email;
    }

    private boolean isActive;

    /**
     * 
     */
    public boolean isIsActive()
    {
        return this.isActive;
    }

    public void setIsActive(boolean isActive)
    {
        this.isActive = isActive;
    }

    private java.util.Date creationDate;

    /**
     * 
     */
    public java.util.Date getCreationDate()
    {
        return this.creationDate;
    }

    public void setCreationDate(java.util.Date creationDate)
    {
        this.creationDate = creationDate;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private java.util.Collection roles = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getRoles()
    {
        return this.roles;
    }

    public void setRoles(java.util.Collection roles)
    {
        this.roles = roles;
    }

    /**
     * 
     */
    public abstract finf.ucf.cu.domain.Users getUserDetails(java.lang.String username);

    /**
     * Returns <code>true</code> if the argument is an Users instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Users))
        {
            return false;
        }
        final Users that = (Users)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link finf.ucf.cu.domain.Users}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link finf.ucf.cu.domain.Users}.
         */
        public static finf.ucf.cu.domain.Users newInstance()
        {
            return new finf.ucf.cu.domain.UsersImpl();
        }

        /**
         * Constructs a new instance of {@link finf.ucf.cu.domain.Users}, taking all required and/or
         * read-only properties as arguments.
         */
        public static finf.ucf.cu.domain.Users newInstance(java.lang.String username, java.lang.String password, java.lang.String firstName, java.lang.String lastName, java.lang.String email, boolean isActive, java.util.Date creationDate)
        {
            final finf.ucf.cu.domain.Users entity = new finf.ucf.cu.domain.UsersImpl();
            entity.setUsername(username);
            entity.setPassword(password);
            entity.setFirstName(firstName);
            entity.setLastName(lastName);
            entity.setEmail(email);
            entity.setIsActive(isActive);
            entity.setCreationDate(creationDate);
            return entity;
        }

        /**
         * Constructs a new instance of {@link finf.ucf.cu.domain.Users}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static finf.ucf.cu.domain.Users newInstance(java.lang.String username, java.lang.String password, java.lang.String firstName, java.lang.String lastName, java.lang.String email, boolean isActive, java.util.Date creationDate, java.util.Collection roles)
        {
            final finf.ucf.cu.domain.Users entity = new finf.ucf.cu.domain.UsersImpl();
            entity.setUsername(username);
            entity.setPassword(password);
            entity.setFirstName(firstName);
            entity.setLastName(lastName);
            entity.setEmail(email);
            entity.setIsActive(isActive);
            entity.setCreationDate(creationDate);
            entity.setRoles(roles);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}