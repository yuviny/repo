// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package finf.ucf.cu.domain;

/**
 * <p>
 * Son los turnos de clase que se reciben por los grupos.
 * </p>
 * <p>
 * Note que para modificar uno de los registros mostrados en la
 * tabla se debe marcar el boton de circular (primera columna de la
 * tabla). Luego de esto se le activa el boton de actualizar, ud
 * debe hacer los cambios pertinentes y pinchar actulizar.
 * </p>
 * <p>
 * Para eliminar registros se selecciona todos lo que quiera en la
 * segunda columna de la tabla, se le activa el boton eliminar y
 * solo entonces puede efectuar lo que pretende.
 * </p>
 * <p>
 * Los campos dentro del formulario con asteriscos rojos son
 * obligatorios.
 * </p>
 */
public abstract class ClassTime
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -5920690917711338538L;

    private java.util.Date day;

    /**
     * <p>
     * Este campo indica el dia de la semana ha realizar la clase.
     * </p>
     */
    public java.util.Date getDay()
    {
        return this.day;
    }

    public void setDay(java.util.Date day)
    {
        this.day = day;
    }

    private finf.ucf.cu.domain.cTime time;

    /**
     * <p>
     * Este campo indica el tiempo del dia a realizar la clase.
     * </p>
     */
    public finf.ucf.cu.domain.cTime getTime()
    {
        return this.time;
    }

    public void setTime(finf.ucf.cu.domain.cTime time)
    {
        this.time = time;
    }

    private java.lang.Integer duration;

    /**
     * 
     */
    public java.lang.Integer getDuration()
    {
        return this.duration;
    }

    public void setDuration(java.lang.Integer duration)
    {
        this.duration = duration;
    }

    private boolean fixed;

    /**
     * 
     */
    public boolean isFixed()
    {
        return this.fixed;
    }

    public void setFixed(boolean fixed)
    {
        this.fixed = fixed;
    }

    private boolean tipic;

    /**
     * 
     */
    public boolean isTipic()
    {
        return this.tipic;
    }

    public void setTipic(boolean tipic)
    {
        this.tipic = tipic;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private finf.ucf.cu.domain.Group groupId;

    /**
     * <p>
     * Este campo indica el Grupo que recibir&aacute; la clase.
     * </p>
     */
    public finf.ucf.cu.domain.Group getGroupId()
    {
        return this.groupId;
    }

    public void setGroupId(finf.ucf.cu.domain.Group groupId)
    {
        this.groupId = groupId;
    }

    private finf.ucf.cu.domain.Teacher teacherId;

    /**
     * <p>
     * Este campo indica el Profesor responsable de impartir la clase.
     * </p>
     */
    public finf.ucf.cu.domain.Teacher getTeacherId()
    {
        return this.teacherId;
    }

    public void setTeacherId(finf.ucf.cu.domain.Teacher teacherId)
    {
        this.teacherId = teacherId;
    }

    private finf.ucf.cu.domain.Subject subjectId;

    /**
     * <p>
     * Este campo indica la asignatura que se impartir&aacute; en la
     * Clase
     * </p>
     */
    public finf.ucf.cu.domain.Subject getSubjectId()
    {
        return this.subjectId;
    }

    public void setSubjectId(finf.ucf.cu.domain.Subject subjectId)
    {
        this.subjectId = subjectId;
    }

    private finf.ucf.cu.domain.Room roomId;

    /**
     * <p>
     * Este campo es el aula o espacio que finalmente se le asigna para
     * que se desarrolle la clase.
     * </p>
     */
    public finf.ucf.cu.domain.Room getRoomId()
    {
        return this.roomId;
    }

    public void setRoomId(finf.ucf.cu.domain.Room roomId)
    {
        this.roomId = roomId;
    }

    private finf.ucf.cu.domain.Semester solution;

    /**
     * <p>
     * Este campo indica a que solucion pertenece cada turno de clase.
     * </p>
     */
    public finf.ucf.cu.domain.Semester getSolution()
    {
        return this.solution;
    }

    public void setSolution(finf.ucf.cu.domain.Semester solution)
    {
        this.solution = solution;
    }

    private finf.ucf.cu.domain.ClassType classTypeID;

    /**
     * 
     */
    public finf.ucf.cu.domain.ClassType getClassTypeID()
    {
        return this.classTypeID;
    }

    public void setClassTypeID(finf.ucf.cu.domain.ClassType classTypeID)
    {
        this.classTypeID = classTypeID;
    }

    /**
     * Returns <code>true</code> if the argument is an ClassTime instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof ClassTime))
        {
            return false;
        }
        final ClassTime that = (ClassTime)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link finf.ucf.cu.domain.ClassTime}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link finf.ucf.cu.domain.ClassTime}.
         */
        public static finf.ucf.cu.domain.ClassTime newInstance()
        {
            return new finf.ucf.cu.domain.ClassTimeImpl();
        }

        /**
         * Constructs a new instance of {@link finf.ucf.cu.domain.ClassTime}, taking all required and/or
         * read-only properties as arguments.
         */
        public static finf.ucf.cu.domain.ClassTime newInstance(java.util.Date day, finf.ucf.cu.domain.cTime time, finf.ucf.cu.domain.Group groupId, finf.ucf.cu.domain.Subject subjectId, finf.ucf.cu.domain.Semester solution)
        {
            final finf.ucf.cu.domain.ClassTime entity = new finf.ucf.cu.domain.ClassTimeImpl();
            entity.setDay(day);
            entity.setTime(time);
            entity.setGroupId(groupId);
            entity.setSubjectId(subjectId);
            entity.setSolution(solution);
            return entity;
        }

        /**
         * Constructs a new instance of {@link finf.ucf.cu.domain.ClassTime}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static finf.ucf.cu.domain.ClassTime newInstance(java.util.Date day, finf.ucf.cu.domain.cTime time, java.lang.Integer duration, boolean fixed, boolean tipic, finf.ucf.cu.domain.Group groupId, finf.ucf.cu.domain.Teacher teacherId, finf.ucf.cu.domain.Subject subjectId, finf.ucf.cu.domain.Room roomId, finf.ucf.cu.domain.Semester solution, finf.ucf.cu.domain.ClassType classTypeID)
        {
            final finf.ucf.cu.domain.ClassTime entity = new finf.ucf.cu.domain.ClassTimeImpl();
            entity.setDay(day);
            entity.setTime(time);
            entity.setDuration(duration);
            entity.setFixed(fixed);
            entity.setTipic(tipic);
            entity.setGroupId(groupId);
            entity.setTeacherId(teacherId);
            entity.setSubjectId(subjectId);
            entity.setRoomId(roomId);
            entity.setSolution(solution);
            entity.setClassTypeID(classTypeID);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}